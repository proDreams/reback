name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            file: universal-backup-restore_macos_m1
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
            file: universal-backup-restore_macos_intel
          - platform: 'ubuntu-22.04'
            args: ''
            file: universal-backup-restore_linux
          - platform: 'windows-latest'
            args: ''
            file: universal-backup-restore.exe

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install latest rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Build
        shell: bash
        run: |
          cargo build --all --release ${{ matrix.args }}
          BIN_PATH="target/release/universal-backup-restore${{ matrix.platform == 'windows-latest' && '.exe' || '' }}"
          if [ ! -f "$BIN_PATH" ]; then
            echo "Error: Binary not found at $BIN_PATH"
            exit 1
          fi
          if [ "${{ matrix.platform }}" != "windows-latest" ]; then
            strip "$BIN_PATH"
          fi
          mv "$BIN_PATH" "target/release/${{ matrix.file }}"

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v0.1.0"
          files: |
            target/release/${{ matrix.file }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
